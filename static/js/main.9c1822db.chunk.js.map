{"version":3,"sources":["useDemo.js","demo.js","App.js","index.js"],"names":["useDemo","useState","isScreenSmall","setIsScreenSmall","checkScreenSize","window","innerWidth","useEffect","addEventListener","removeEventListener","Demo","onSmallScreen","App","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+JAkBeA,EAhBC,WAAO,IAAD,EACsBC,oBAAS,GAD/B,mBACbC,EADa,KACEC,EADF,KAGhBC,EAAkB,WACpBD,EAAiBE,OAAOC,WAAa,MASvC,OAPAC,qBAAU,WAIR,OAHAH,IACAC,OAAOG,iBAAiB,SAAUJ,GAE3B,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IAEIF,G,OCNMQ,EANF,WACX,IAAMC,EAAgBX,IAEtB,OAAO,wCAASW,MCJH,SAASC,IACtB,OACE,sBAAKC,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,OCDN,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACN,EAAD,MAEFE,I","file":"static/js/main.9c1822db.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useDemo = () => {\r\n  const [isScreenSmall, setIsScreenSmall] = useState(false);\r\n\r\n  let checkScreenSize = () => {\r\n    setIsScreenSmall(window.innerWidth < 600);\r\n  };\r\n  useEffect(() => {\r\n    checkScreenSize();\r\n    window.addEventListener(\"resize\", checkScreenSize);\r\n\r\n    return () => window.removeEventListener(\"resize\", checkScreenSize);\r\n  }, []);\r\n\r\n  return isScreenSmall;\r\n};\r\n\r\nexport default useDemo;\r\n","import React from \"react\";\r\nimport useDemo from \"./useDemo\";\r\n\r\nconst Demo = () => {\r\n  const onSmallScreen = useDemo();\r\n\r\n  return <div>{`${onSmallScreen}`}</div>;\r\n};\r\n\r\nexport default Demo;\r\n","import \"./styles.css\";\nimport Demo from \"./demo\";\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Hello CodeSandbox</h1>\n      <Demo />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}